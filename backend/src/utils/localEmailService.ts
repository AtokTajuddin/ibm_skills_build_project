// Alternative Email Solution - Save to Files Instead of Sending
// This creates local HTML files with consultation history instead of sending emails

import fs from 'fs';
import path from 'path';
import { IConversation } from '../models/Conversation';

class LocalEmailService {
  private emailsDirectory: string;

  constructor() {
    // Create emails directory if it doesn't exist
    this.emailsDirectory = path.join(process.cwd(), 'consultation_emails');
    if (!fs.existsSync(this.emailsDirectory)) {
      fs.mkdirSync(this.emailsDirectory, { recursive: true });
    }
  }

  /**
   * Save consultation history as HTML file
   */
  async saveConsultationHistory(
    userEmail: string,
    conversation: IConversation,
    patientName: string
  ): Promise<boolean> {
    try {
      const htmlContent = this.generateConversationHTML(conversation);
      
      // Create filename with timestamp
      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
      const filename = `consultation_${conversation._id}_${timestamp}.html`;
      const filepath = path.join(this.emailsDirectory, filename);
      
      // Save HTML file
      fs.writeFileSync(filepath, htmlContent, 'utf8');
      
      console.log(`‚úÖ Consultation history saved to: ${filepath}`);
      console.log(`üìß For email: ${userEmail}`);
      console.log(`üéØ Patient: ${patientName}`);
      
      return true;
    } catch (error) {
      console.error('‚ùå Failed to save consultation history:', error);
      return false;
    }
  }

  private generateConversationHTML(conversation: IConversation): string {
    const title = `<h1>${conversation.title || 'Medical Consultation'}</h1>`;
    
    const dateInfo = `
      <p>
        <strong>Date:</strong> ${new Date(conversation.createdAt).toLocaleDateString()}
        <br><strong>Time:</strong> ${new Date(conversation.createdAt).toLocaleTimeString()}
      </p>
    `;
    
    const messagesHTML = conversation.messages?.map((msg, index) => {
      const role = msg.role === 'user' ? 'Patient' : 'Virtual Doctor';
      const bgColor = msg.role === 'user' ? '#e6f7ff' : '#f6ffed';
      const borderColor = msg.role === 'user' ? '#91d5ff' : '#b7eb8f';
      const content = msg.content || '[No content available]';
      
      return `
        <div style="margin-bottom: 15px; padding: 15px; background-color: ${bgColor}; border-left: 4px solid ${borderColor}; border-radius: 5px;">
          <p style="margin: 0 0 10px 0;"><strong>${role}:</strong> <span style="color: #666; font-size: 0.9em;">${new Date(msg.timestamp).toLocaleTimeString()}</span></p>
          <div style="white-space: pre-wrap; line-height: 1.5;">${content}</div>
        </div>
      `;
    }).join('') || '<p>No messages found</p>';
    
    const disclaimer = `
      <div style="margin-top: 30px; padding: 15px; border-top: 2px solid #ccc; font-size: 12px; color: #666; background-color: #f8f9fa;">
        <p><strong>Disclaimer:</strong> This consultation was conducted with an AI-powered virtual doctor. 
        The information provided should not be considered as professional medical advice. 
        Please consult with a licensed healthcare professional for proper medical advice and treatment.</p>
        <p style="margin-top: 10px;"><strong>Generated by Virtual Hospital</strong> - ${new Date().toISOString().split('T')[0]}</p>
      </div>
    `;
    
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>${conversation.title || 'Medical Consultation'}</title>
          <style>
            body { 
              font-family: Arial, sans-serif; 
              line-height: 1.6; 
              max-width: 800px; 
              margin: 0 auto; 
              padding: 20px; 
              background-color: #ffffff;
            }
            h1 { 
              color: #2c3e50; 
              border-bottom: 3px solid #3498db; 
              padding-bottom: 10px; 
            }
            .header { 
              margin-bottom: 30px; 
              background-color: #f8f9fa; 
              padding: 15px; 
              border-radius: 5px; 
            }
            .conversation {
              margin: 20px 0;
            }
          </style>
        </head>
        <body>
          <div class="header">
            ${title}
            ${dateInfo}
          </div>
          <div class="conversation">
            <h2 style="color: #2c3e50; border-bottom: 1px solid #dee2e6; padding-bottom: 5px;">Conversation History</h2>
            ${messagesHTML}
          </div>
          ${disclaimer}
        </body>
      </html>
    `;
  }
}

export default new LocalEmailService();
